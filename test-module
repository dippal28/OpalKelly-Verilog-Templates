#!/bin/bash
set -o errexit

# Should give an arg
if [ $# == 0 ]
then
    echo "? executes the testbench for the module"
    echo "> syntax:"
    echo "  test-module module-name [post-process script]"
    exit
fi

# copy all verilog to temp dir, and data to bin dir
rm -rf simulation/scratch/*
mkdir -p simulation/scratch/src

for FILE in `find ./cores/*/modules/*.v* -type f -print`
do
    cp -n $FILE ./simulation/scratch/src/ || { echo "ERROR duplicate filename ${FILE}" ; exit 1; }
done

for FILE in `find ./cores/*/testers/*.v* -type f  -print`
do
    cp -n $FILE ./simulation/scratch/src/ || { echo "ERROR duplicate filename ${FILE}" ; exit 1; }
done


for FILE in `find ./ips/*/xem*/*.v* -type f  -print`
do
    cp -n $FILE ./simulation/scratch/src/ || { echo "ERROR duplicate filename ${FILE}" ; exit 1; }
done


#cp simulation/data/* simulation/scripts/* simulation/scratch/

cd simulation/scratch/src

# UUT should contain the name of the unit under test
if [ -f tester_$1.v ]
then
    UUT=$1
else
    echo "syntax:"
    echo "  run test module-name"
    echo "  tester_module-name.v should exist in testers"
    exit 1
fi

# compile current unit
echo "UUT = $UUT"
iverilog -o ../$UUT tester_$UUT.v
cd ..

# run current simul/testbench
if [ -f $UUT ]
then
    ./$UUT
else
    echo "iverilog failed"
    exit
fi

# Done...
echo test for unit $UUT is done !

# post processing script
if [ -f ../scripts/check-$UUT ]
then
    ../scripts/check-$UUT
fi

exit 0
